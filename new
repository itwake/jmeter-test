import java.util.*;

public class Solution {
    public static int[] funcArrange(int[] inputArr) {
        int[] answer = new int[inputArr.length];
        
        // Pointers for even and odd positions in the result array
        int evenIndex = 0;
        int oddIndex = inputArr.length - 1;

        // Traverse the input array
        for (int num : inputArr) {
            if (num % 2 == 0) {
                // Place even numbers at the start
                answer[evenIndex++] = num;
            } else {
                // Place odd numbers at the end
                answer[oddIndex--] = num;
            }
        }
        
        // Reverse the odd numbers part to maintain original order
        reverse(answer, evenIndex, inputArr.length - 1);

        return answer;
    }

    private static void reverse(int[] arr, int start, int end) {
        while (start < end) {
            int temp = arr[start];
            arr[start] = arr[end];
            arr[end] = temp;
            start++;
            end--;
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Read input
        int n = scanner.nextInt();
        int[] inputArr = new int[n];
        for (int i = 0; i < n; i++) {
            inputArr[i] = scanner.nextInt();
        }
        
        // Solve the problem
        int[] result = funcArrange(inputArr);
        
        // Print the result
        for (int num : result) {
            System.out.print(num + " ");
        }
    }
}
